@layer utilities {
  .animate-fadeIn {
    animation: fadeIn 0.3s ease forwards;
  }

  .animate-pulse-slow {
    animation: pulse 3s infinite;
  }

  .custom-scrollbar {
    scrollbar-width: thin;
    scrollbar-color: var(--primary) transparent;
  }
  
  .custom-scrollbar::-webkit-scrollbar {
    width: 6px;
  }
  
  .custom-scrollbar::-webkit-scrollbar-track {
    background: transparent;
  }
  
  .custom-scrollbar::-webkit-scrollbar-thumb {
    background-color: var(--primary-50);
    border-radius: 20px;
  }

  .custom-scrollbar::-webkit-scrollbar-thumb:hover {
    background-color: var(--primary);
  }
  
  /* Hidden scrollbar styles */
  .no-scrollbar {
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
    overflow-y: auto;
  }
  
  .no-scrollbar::-webkit-scrollbar {
    display: none; /* Chrome, Safari and Opera */
    width: 0;
    height: 0;
  }
  
  /* Apply to all scrollable containers */
  .hide-scrollbar {
    scrollbar-width: none;
    -ms-overflow-style: none;
    overflow-y: auto;
  }
  
  .hide-scrollbar::-webkit-scrollbar {
    display: none;
    width: 0;
    height: 0;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
} 

/* Global scrollbar hiding */
html {
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE/Edge */
}

html::-webkit-scrollbar {
  display: none; /* Chrome, Safari, Opera */
  width: 0;
  height: 0;
}

body {
  overflow-y: auto;
  scrollbar-width: none;
  -ms-overflow-style: none;
}

body::-webkit-scrollbar {
  display: none;
  width: 0;
  height: 0;
}

/* Elements with overflow-y: auto */
.element-with-overflow-y {
  overflow-y: auto;
  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;  /* Firefox */
}

.element-with-overflow-y::-webkit-scrollbar {
  display: none;
}

/* Blur filter utilities - prevent negative blur values */
:root {
  --blur-none: 0px;
  --blur-sm: 2px;
  --blur-md: 4px;
  --blur-lg: 8px;
}

.blur-safe {
  --blur-value: var(--blur-none);
  filter: blur(var(--blur-value));
}

.blur-safe[data-blur="sm"] {
  --blur-value: var(--blur-sm);
}

.blur-safe[data-blur="md"] {
  --blur-value: var(--blur-md);
}

.blur-safe[data-blur="lg"] {
  --blur-value: var(--blur-lg);
}

/* Motion safe blur - ensures no negative values during animation */
@supports (filter: blur(max(0px, 4px))) {
  .motion-blur-safe {
    filter: blur(max(0px, var(--blur-value, 0px)));
  }
}

@supports not (filter: blur(max(0px, 4px))) {
  .motion-blur-safe {
    filter: blur(var(--blur-value, 0px));
  }
}

/* Animation keyframes with safe blur values */
@keyframes safeBlurIn {
  from { filter: blur(max(0px, 4px)); opacity: 0; }
  to { filter: blur(0px); opacity: 1; }
}

@keyframes safeBlurOut {
  from { filter: blur(0px); opacity: 1; }
  to { filter: blur(max(0px, 4px)); opacity: 0; }
}

/* CSS property to prevent negative blur */
* {
  --safe-blur: max(0px, var(--blur-input, 0px));
}

.no-negative-blur {
  filter: blur(var(--safe-blur));
} 